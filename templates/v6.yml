stages:
  - build
  - test
  - post
  - deploy

cache:
  key: julia
  paths:
    - downloads

variables:
  DEBIAN_FRONTEND: 'noninteractive'


#
# Julia versions
#

.julia:0.7:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/0.7/julia-0.7.0-linux-x86_64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-0.7.0-linux-x86_64.tar.gz

.julia:1.0:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.4-linux-x86_64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-1.0.4-linux-x86_64.tar.gz

.julia:1.1:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/1.1/julia-1.1.1-linux-x86_64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-1.1.1-linux-x86_64.tar.gz

.julia:1.2:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/1.2/julia-1.2.0-linux-x86_64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-1.2.0-linux-x86_64.tar.gz

.julia:1.3:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3.0-rc3-linux-x86_64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-1.3.0-rc3-linux-x86_64.tar.gz

.julia:nightly:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - wget -nv -N -P downloads/ https://julialangnightlies-s3.julialang.org/bin/linux/x64/julia-latest-linux64.tar.gz
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/julia-latest-linux64.tar.gz

.julia:source:
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install git build-essential libatomic1 python gfortran perl wget m4 cmake pkg-config
    - git clone https://github.com/JuliaLang/julia
    - make -C julia -j$(nproc) install JULIA_PRECOMPILE=0 $CI_BUILD_ARGS
    - ln -s $(pwd)/julia/julia /usr/local/bin/julia


#
# test
#

.test:
  stage: test
  script:
    - julia -e 'using InteractiveUtils;
                versioninfo()'
    - julia --project -e 'using Pkg;
                          Pkg.instantiate();
                          Pkg.build();
                          Pkg.test(; coverage=true);'
  artifacts:
    when: always
    paths:
      - deps/ext.jl
      - deps/build.log
      # gitlab-runner#2620
      - src/*.cov
      - src/*/*.cov
      - src/*/*/*.cov


#
# coverage
#

.coverage:
  stage: post
  script:
    - julia -e 'using InteractiveUtils;
                versioninfo()'
    - julia -e 'using Pkg;
                Pkg.instantiate();
                Pkg.add("Coverage")'
    - julia -e 'using Coverage;
                cl, tl = get_summary(process_folder());
                println("(", cl/tl*100, "%) covered");
                Codecov.submit_local(process_folder(), ".")'
  coverage: '/\(\d+.\d+\%\) covered/'


#
# documentation
#

# NOTE: the recommended set-up is to develop the main package from the docs environment,
#       but that ignores the package's Manifest. instead, we instantiate and activate both
#       by setting the load path, giving priority to the main package Manifest.

.documentation:
  stage: post
  variables:
    DOCUMENTER_DEBUG: "true"
    JULIA_LOAD_PATH: ".:docs::"
  script:
    - julia -e 'using InteractiveUtils;
                versioninfo()'
    - julia --project -e 'using Pkg;
                          Pkg.instantiate()'
    - julia --project=docs/ -e 'using Pkg;
                                Pkg.instantiate()'
    - julia --project=docs/ docs/make.jl
  artifacts:
    paths:
    - docs/build
